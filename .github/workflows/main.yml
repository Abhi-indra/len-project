name: CI/CD with Bastion and ECR

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: lens

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPO }}:latest .

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_REPO }}:latest

    - name: [Optional] Run Tests
      run: |
        echo "You can insert test commands here, e.g., pytest or npm test"

    - name: Deploy via Bastion Host
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_BACKEND }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        proxy_host: ${{ secrets.EC2_BASTION }}
        proxy_username: ${{ secrets.EC2_USER }}
        proxy_key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Logging into ECR from EC2..."
          docker login -u AWS -p $(aws ecr get-login-password --region ${{ secrets.AWS_REGION }}) ${{ secrets.ECR_REPO }}

          echo "Pulling latest image..."
          docker pull ${{ secrets.ECR_REPO }}:latest

          echo "Stopping existing container..."
          docker stop app || true
          docker rm app || true

          echo "Running container on port 5000..."
          docker run -d --name app -p 5000:5000 ${{ secrets.ECR_REPO }}:latest
