name: CI/CD Pipeline for Lens

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout source code
        uses: actions/checkout@v3

      - name: ‚úÖ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ‚úÖ Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: ‚úÖ Build Docker image
        run: |
          docker build -t lens .
          docker tag lens:latest ${{ secrets.ECR_REPO }}:latest

      - name: ‚úÖ Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPO }}:latest

      - name: ‚úÖ SSH & Deploy to Backend EC2 via Bastion
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_BACKEND }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          proxy_host: ${{ secrets.EC2_BASTION }}
          proxy_username: ${{ secrets.EC2_USER }}
          proxy_key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üîë Logging into ECR on EC2..."
            sudo aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}
            
            echo "üìÇ Navigating to application folder..."
            cd /home/ubuntu/application
            
            echo "‚¨áÔ∏è Pulling latest image..."
            sudo docker-compose pull
            
            echo "‚ôªÔ∏è Restarting services..."
            sudo docker-compose up -d
